class Solution(object):
    ###########################################################################
    ###########################################################################
    ######################### TWO SUM 1 #######################################
    ###########################################################################
    ###########################################################################
    def twoSum(self, nums, target):
        """
        :param nums: List
        :param target: int
        :return: indices of two numbers that add to target
        """
        seen = {}
        for i in range(len(nums)):
            complement = target - nums[i]
            if complement in seen:
                return [i, seen[complement]]
            seen[nums[i]] = i
        return [-1, -1]


    ###########################################################################
    ###########################################################################
    ######################### BEST TIME TO BUY AND SELL STOCK 121 #############
    ###########################################################################
    ###########################################################################
    def maxProfit(self, prices):
        """
        key idea: max profit depends on the lowest price
        :param prices: List of stock prices
        :return: max profit (int)
        """
        if len(prices) == 0:
            return 0
        max_profit = 0
        min_price = prices[0]
        for i in range(len(prices)):
            if prices[i] < min_price:
                min_price = prices[i]
            elif prices[i] - min_price > max_profit:
                max_profit = prices[i] - min_price
        return max_profit

    ###########################################################################
    ###########################################################################
    ######################### CONTAINS DUPLICATE 217 ##########################
    ###########################################################################
    ###########################################################################
    def containsDupicate(self, nums):
        """
        :param nums: List[int]
        :return: bool
        """
        n = set()
        for num in nums:
            if num in n:
                return True
            n.add(num)
        return False

    ###########################################################################
    ###########################################################################
    ######################### PRODUCT EXCEPT SELF 238 #########################
    ###########################################################################
    ###########################################################################
    def productExceptSelf(self, nums):
        p = 1
        n = len(nums)
        left = []
        for i in range(0, n):
            left.append(p)
            p = p * nums[i]

        p = 1
        right = []
        for i in range(n-1, -1, -1):
            right.append(p)
            p = p * nums[i]

        output = []
        l, r = 0, n-1
        while l < n:
            output.append(left[l] * right[r])
            l += 1
            r -=1
        return output


if __name__ == "__main__":
    s = Solution()

    ###########################################################################
    ###########################################################################
    ######################### TWO SUM 1 #######################################
    ###########################################################################
    ###########################################################################
    print('Two Sum')
    print(s.twoSum([2, 7, 11, 15], 9)) # [2, 7]

    ###########################################################################
    ###########################################################################
    ######################### BEST TIME TO BUY AND SELL STOCK 121 #############
    ###########################################################################
    ###########################################################################
    print('Best Time to Buy & Sell Stock')
    print(s.maxProfit([7, 1, 5, 3, 6, 4]))
    # 5 because buy on day 2 and sell on day -2

    ###########################################################################
    ###########################################################################
    ######################### CONTAINS DUPLICATE 217 ##########################
    ###########################################################################
    ###########################################################################
    print('Contains Duplicate')
    print(s.containsDupicate([1, 2, 3, 4])) # False
    print(s.containsDupicate([1, 1, 4, 5])) # True

    ###########################################################################
    ###########################################################################
    ######################### PRODUCT EXCEPT SELF 238 #########################
    ###########################################################################
    ###########################################################################
    print(s.productExceptSelf([1, 2, 3, 4]))